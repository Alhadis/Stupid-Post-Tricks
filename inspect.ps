%!PS

/Inspect <<
	/refs    <<>>
	/buffer  1024 string
	/break?  true
	/indent? true
	/depth   0
	/depth++ {/depth depth 1 add def}
	/depth-- {/depth depth 1 sub def}
	/indent  {indent? {depth {(\t) print} repeat} {/indent? true def} ifelse}
	/priv    {0 eq {(-private-)} {( --private-- )} ifelse 8 p pop}
	/nl      {(\n) print}
	/saveref {dup refs exch refs length put}
	/p {
		(\033[38;5;) print
		buffer cvs print
		(m) print
		dup type /stringtype ne {buffer cvs} if
		print
		(\033[0m) print
	}
	/arraytype {
		dup refs exch known {
			(Circular Reference ) 6 p
			refs exch get
			6 p
		} {
			saveref
			break? exch
			/break? true def
			dup xcheck {({)} {([)} ifelse 8 p
			dup rcheck {
				dup length 0 gt {
					nl dup
					depth++
					{call} forall
					depth--
					indent
				} if
			} {1 priv} ifelse
			xcheck {(})} {(])} ifelse 8 p
			/break? exch def
		} ifelse
	}
	/booleantype {13 p}
	/dicttype {
		dup refs exch known {
			(Circular Reference ) 6 p
			refs exch get
			6 p
		} {
			saveref
			break? exch
			(<<) 9 p
			dup rcheck {
				dup length 0 gt {
					dup nl
					depth++
					{
						exch
						/break? false def
						call
						/break? true def
						( => ) 8 p
						/indent? false def
						call
					} forall
					depth--
					indent
				} if pop
			} {1 priv} ifelse
			(>>) 9 p
			/break? exch def
		} ifelse
	}
	/filetype {
		(File ) 11 p
		dup status not {((invalid) ) 11 p} if
		(@ ) 11 p dup fileposition dup 11 p
		(/)  11 p exch bytesavailable add 11 p
	}
	/fonttype {pop (FontID) 11 p}
	/gstatetype {
		(Graphics State ) 11 p
		gsave setgstate
		/indent? false def
		<<
			/LineWidth     currentlinewidth
			/LineCaps      currentlinecap  [(butt) (round) (square)] exch get
			/LineJoints    currentlinejoin [(miter) (round) (bevel)] exch get
			/MiterLimit    currentmiterlimit
			/AdjustStrokes currentstrokeadjust
			/Dashes        [currentdash]
			/Colour        [currentcolor]
			/ColourSpace   currentcolorspace
			/Greyness      currentgray
			/HSB           [currenthsbcolor]
			/RGB           [currentrgbcolor]
			/CMYK          [currentcmykcolor]
		>> call
		/break? false def
		grestore
	}
	/integertype {3 p}
	/marktype {pop (Mark) 9 p}
	/nametype {dup xcheck not {(/) 10 p} if 10 p}
	/nulltype {pop (null) 6 p}
	/operatortype {9 p}
	/packedarraytype {(#) 8 p arraytype}
	/realtype {3 p}
	/savetype {pop (VM Snapshot) 11 p}
	/stringtype {dup rcheck {(\() 14 p 14 p (\)) 14 p} {0 priv} ifelse}
	/call {
		Inspect begin
		indent
		dup type exec
		break? {nl} if
		depth 0 eq {reset} if
		end
	} bind
	/reset {
		/refs    <<>> def
		/break?  true def
		/indent? true def
		/depth   0    def
		/buffer  1024 string def
	} bind
>> def

/=== Inspect /call get def

/istack {
	count array astore dup
	[exch aload pop 2 1 counttomark 2 sub {-1 roll} for]
	{===} forall aload pop
} bind def
